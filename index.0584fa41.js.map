{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,UAE/B,EAAkB,SAAS,aAAa,CAAC,eAE/C,EAAgB,gBAAgB,CAAC,QAAS,WAGxC,IAAK,IAFC,EAAS,SAAS,aAAa,CAAC,MAE7B,EAAI,EAAG,EAAI,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAE,IAC9C,EAAO,MAAM,CAAC,SAAS,aAAa,CAAC,OACrC,EAAM,MAAM,CAAC,EAGX,CAAA,EAAM,IAAI,CAAC,MAAM,EAAI,IACvB,CAAA,EAAgB,QAAQ,CAAG,CAAA,CAD7B,EAII,EAAM,IAAI,CAAC,MAAM,CAAG,GACtB,CAAA,EAAgB,QAAQ,CAAG,CAAA,CAD7B,CAGF,GAEA,IAAM,EAAkB,SAAS,aAAa,CAAC,eAE/C,EAAgB,gBAAgB,CAAC,QAAS,WACxC,IAAM,EAAO,EAAM,IAAI,CAEvB,CAAI,CAAC,EAAK,MAAM,CAAG,EAAE,CAAC,MAAM,GAExB,EAAM,IAAI,CAAC,MAAM,CAAG,IACtB,CAAA,EAAgB,QAAQ,CAAG,CAAA,CAD7B,EAII,EAAM,IAAI,CAAC,MAAM,EAAI,GACvB,CAAA,EAAgB,QAAQ,CAAG,CAAA,CAD7B,CAGF,GAEA,IAAM,EAAqB,SAAS,aAAa,CAAC,kBAElD,EAAmB,gBAAgB,CAAC,QAAS,WACtC,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,MAAM,CAAC,SAAS,aAAa,CAAC,M,C,M,E,CAD/B,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAID,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAI,IAChC,CAAA,EAAmB,QAAQ,CAAG,CAAA,CADhC,EAII,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAG,GAC/B,CAAA,EAAmB,QAAQ,CAAG,CAAA,CADhC,CAGF,GAEA,IAAM,EAAqB,SAAS,aAAa,CAAC,kBAElD,EAAmB,gBAAgB,CAAC,QAAS,WACtC,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAI,KAAK,CAAC,EAAI,KAAK,CAAC,MAAM,CAAG,EAAE,CAAC,MAAM,E,C,C,M,E,CADnC,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAID,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAG,IAC/B,CAAA,EAAmB,QAAQ,CAAG,CAAA,CADhC,EAII,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAI,GAChC,CAAA,EAAmB,QAAQ,CAAG,CAAA,CADhC,CAGF,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\".field\");\nvar buttonAppendRow = document.querySelector(\".append-row\");\nbuttonAppendRow.addEventListener(\"click\", function() {\n    var trElem = document.createElement(\"tr\");\n    for(var i = 0; i < table.rows[0].cells.length; i++){\n        trElem.append(document.createElement(\"td\"));\n        table.append(trElem);\n    }\n    if (table.rows.length >= 10) buttonAppendRow.disabled = true;\n    if (table.rows.length > 2) buttonRemoveRow.disabled = false;\n});\nvar buttonRemoveRow = document.querySelector(\".remove-row\");\nbuttonRemoveRow.addEventListener(\"click\", function() {\n    var rows = table.rows;\n    rows[rows.length - 1].remove();\n    if (table.rows.length < 10) buttonAppendRow.disabled = false;\n    if (table.rows.length <= 2) buttonRemoveRow.disabled = true;\n});\nvar buttonAppendColumn = document.querySelector(\".append-column\");\nbuttonAppendColumn.addEventListener(\"click\", function() {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.append(document.createElement(\"td\"));\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    if (table.rows[0].cells.length >= 10) buttonAppendColumn.disabled = true;\n    if (table.rows[0].cells.length > 2) buttonRemoveColumn.disabled = false;\n});\nvar buttonRemoveColumn = document.querySelector(\".remove-column\");\nbuttonRemoveColumn.addEventListener(\"click\", function() {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.cells[row.cells.length - 1].remove();\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    if (table.rows[0].cells.length < 10) buttonAppendColumn.disabled = false;\n    if (table.rows[0].cells.length <= 2) buttonRemoveColumn.disabled = true;\n});\n\n//# sourceMappingURL=index.0584fa41.js.map\n","'use strict';\n\nconst table = document.querySelector('.field');\n\nconst buttonAppendRow = document.querySelector('.append-row');\n\nbuttonAppendRow.addEventListener('click', function() {\n  const trElem = document.createElement('tr');\n\n  for (let i = 0; i < table.rows[0].cells.length; i++) {\n    trElem.append(document.createElement('td'));\n    table.append(trElem);\n  }\n\n  if (table.rows.length >= 10) {\n    buttonAppendRow.disabled = true;\n  }\n\n  if (table.rows.length > 2) {\n    buttonRemoveRow.disabled = false;\n  }\n});\n\nconst buttonRemoveRow = document.querySelector('.remove-row');\n\nbuttonRemoveRow.addEventListener('click', function() {\n  const rows = table.rows;\n\n  rows[rows.length - 1].remove();\n\n  if (table.rows.length < 10) {\n    buttonAppendRow.disabled = false;\n  }\n\n  if (table.rows.length <= 2) {\n    buttonRemoveRow.disabled = true;\n  }\n});\n\nconst buttonAppendColumn = document.querySelector('.append-column');\n\nbuttonAppendColumn.addEventListener('click', function() {\n  for (const row of table.rows) {\n    row.append(document.createElement('td'));\n  }\n\n  if (table.rows[0].cells.length >= 10) {\n    buttonAppendColumn.disabled = true;\n  }\n\n  if (table.rows[0].cells.length > 2) {\n    buttonRemoveColumn.disabled = false;\n  }\n});\n\nconst buttonRemoveColumn = document.querySelector('.remove-column');\n\nbuttonRemoveColumn.addEventListener('click', function() {\n  for (const row of table.rows) {\n    row.cells[row.cells.length - 1].remove();\n  }\n\n  if (table.rows[0].cells.length < 10) {\n    buttonAppendColumn.disabled = false;\n  }\n\n  if (table.rows[0].cells.length <= 2) {\n    buttonRemoveColumn.disabled = true;\n  }\n});\n"],"names":["table","document","querySelector","buttonAppendRow","addEventListener","trElem","createElement","i","rows","cells","length","append","disabled","buttonRemoveRow","remove","buttonAppendColumn","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","err","return","buttonRemoveColumn"],"version":3,"file":"index.0584fa41.js.map"}